<?php

/*
 * Generated by SuperAdmin Generator date : 25/03/13 16:38:07
 */
 
class moduleManagerAdminUtils {
    
    static function getModuleManagerAdmins()
    {
        $db=mfSiteDatabase::getInstance()
                ->setQuery("SELECT * FROM ".moduleManagerAdmin::getTable()." ;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return null;
        $items=array();
        while ($row=$db->fetchObject('moduleManagerAdmin'))
            $items[]=$row;
        return $items;
    }
    
     static function getFieldValues($name)
    {
        $values=array();
        $db=mfSiteDatabase::getInstance()
                ->setParameters(array("name"=>$name))
                ->setQuery("SELECT DISTINCT({name}) FROM ".moduleManagerAdmin::getTable()." ORDER BY {name} ASC;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return $values;
        while ($value=$db->fetchArray())
        { 
            $values[$value[$name]]=$value[$name];
        }      
        return $values;
    }
    
    static function getLanguages()
    {
        $db=mfSiteDatabase::getInstance()
                ->setQuery("SELECT DISTINCT(lang) FROM ".moduleManagerAdmin::getTable()." ;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return array();
        $languages=array();
        while ($language=$db->fetchArray())
        { 
            $languages[$language['lang']]=$language['lang'];
        }      
        return $languages;
    }
    
    static function getLanguagesSort()
    {
        $db=mfSiteDatabase::getInstance()
                ->setQuery("SELECT DISTINCT(lang) FROM ".moduleManagerAdmin::getTable()." ;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return array();
        $languages=array();
        while ($language=$db->fetchArray())
        { 
           $languages[$language['lang']]=format_country($language['lang']); 
        }  
        asort($languages);
        return $languages;
    }
    
    static function getFieldValuesForSelect($name)
    {
        $values=array();
        $db=mfSiteDatabase::getInstance()
                ->setParameters(array("name"=>$name))
                ->setQuery("SELECT DISTINCT({name}),".moduleManagerAdmin::getKeyName()." FROM ".moduleManagerAdmin::getTable()." ORDER BY {name} ASC;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return $values;
        while ($value=$db->fetchArray())
        { 
            $values[$value[moduleManagerAdmin::getKeyName()]]=$value[$name];
        }      
        return $values;
    }
    
    static function getFieldValuesForI18nSelect($name,$lang)
    {
        $values=array();
        $db=mfSiteDatabase::getInstance()
                ->setParameters(array("lang"=>$lang,"name"=>$name))
                ->setQuery("SELECT DISTINCT({name}),".moduleManagerAdmin::getKeyName()." FROM ".moduleManagerAdmin::getTable()." WHERE lang='{lang}' ORDER BY {name} ASC;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return $values;
        while ($value=$db->fetchArray())
        { 
            $values[$value[moduleManagerAdmin::getKeyName()]]=$value[$name];
        }      
        return $values;
    }
    
    static function getFieldValuesForSelectFormat($name,$format_helper)
    {
        if (!function_exists($format_helper))
            throw new mfException("helper [".$format_helper."] doesn't exist.");
       $db=mfSiteDatabase::getInstance()
                ->setParameters(array("name"=>$name))
                ->setQuery("SELECT DISTINCT({name}),".moduleManagerAdmin::getKeyName()." FROM ".moduleManagerAdmin::getTable()." ORDER BY {name} ASC;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return $values;
        while ($value=$db->fetchArray())
        { 
            $values[$value[moduleManagerAdmin::getKeyName()]]=$format_helper($value[$name]);
        }      
        return $values;
    }
    
    static function getFieldValuesForI18nSelectFormat($name,$format_helper,$lang)
    {
        if (!function_exists($format_helper))
            throw new mfException("helper [".$format_helper."] doesn't exist.");
        $values=array();
        $db=mfSiteDatabase::getInstance()
                ->setParameters(array("lang"=>$lang,"name"=>$name))
                ->setQuery("SELECT DISTINCT({name}),".moduleManagerAdmin::getKeyName()." FROM ".moduleManagerAdmin::getTable()." WHERE lang='{lang}' ORDER BY {name} ASC;")               
                ->makeSqlQuerySuperAdmin(); 
        if (!$db->getNumRows())
            return $values;
        while ($value=$db->fetchArray())
        { 
            $values[$value[moduleManagerAdmin::getKeyName()]]=$format_helper($value[$name]);
        }      
        return $values;
    }

    static function getValuesAutoCompleteI18n($field,$search,$lang)
    {
    
    }
    
    static function getValuesAutoComplete($field,$search)
    {
      $values=array();
      $db=mfSiteDatabase::getInstance()
                ->setParameters(array('search'=>$search,'field'=>$field))
                ->setQuery("SELECT ".moduleManagerAdmin::getKeyName().",".$field." FROM ".moduleManagerAdmin::getTable()." WHERE {field} LIKE '{search}%%%%';")               
                ->makeSqlQuerySuperAdmin();   
       if (!$db->getNumRows())
          return $values;
       while ($value=$db->fetchArray())
            $values[$value[moduleManagerAdmin::getKeyName()]]=$value[$field];
       return $values;
    }
    
    static function getCoreModulesList()
    {
         $modules=array();
         foreach (glob(mfConfig::get('mf_modules_dir')."/*",GLOB_ONLYDIR) as $file)
         {
            $modules[basename($file)]=$file;
         }   
         return $modules;
    }
    
    static function buildModulesList()                                                                                           
    {
         $modules=self::getCoreModulesList();
         $names=array_keys($modules);
         $db=mfSiteDatabase::getInstance()
            ->setQuery("SELECT name FROM ".moduleManagerAdmin::getTable()." WHERE name IN('".implode("','",$names)."');")
            ->makeSqlQuerySuperAdmin();   
         if ($db->getNumRows())
         {
            // Remove module already in db
            while ($row=$db->fetchArray())
            {
              $name=$row['name'];
              if (isset($modules[$name]))  
                  unset($modules[$name]);
            }
         }
       
         // Modules to insert in DB (only module with config files)
         if (!$modules)
             return ;
         $modulesAdmin=new moduleManagerAdminCollection();
         foreach ($modules as $name=>$file)
         {
           $item=new moduleManagerAdmin($name);
           if (!$item->hasConfigFile())
                 continue;
           $item->setConfigFromFile();
           // Here we read config and put it in DB
           $modulesAdmin[]=$item;
         }  
         $modulesAdmin->save();
    }
    
    static function refreshModulesList()                                                                                           
    {
          mfSiteDatabase::getInstance()
            ->setQuery("TRUNCATE TABLE ".moduleManagerAdmin::getTable().";")
            ->makeSqlQuerySuperAdmin();  
         self::buildModulesList();
    }
    
    static function getCoreModules()
    {        
         $db=mfSiteDatabase::getInstance()
            ->setQuery("SELECT * FROM ".moduleManagerAdmin::getTable()." WHERE type IN('core','base','system') ORDER BY name ASC;")
            ->makeSqlQuerySuperAdmin();   
         if (!$db->getNumRows())
            return array();
         $items=array();
         while ($row=$db->fetchObject('moduleManagerAdmin'))
            $items[]=$row;
         return $items;
    }
}
