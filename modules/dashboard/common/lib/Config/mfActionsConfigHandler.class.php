<?php

class mfActionsConfigHandler extends mfFileLoaderConfigHandler {

   
    
    function getModules($configFiles)
    {
        $modules=array();
        foreach  ($configFiles as $file)
        {
            $file=explode("/",str_replace(mfConfig::get('mf_modules_dir')."/","",$file));
            $modules[]=$file[0];
        }
        // Here we have module used
        // May be remove configFiles where module is not enabled
    }
    
    function execute($configFiles) {
        $selectorName=$this->getParameters()->get('parameters');
        $data=$this->buildActions($configFiles,$selectorName,$selectorName."_actions"); 
        $retval=sprintf("<?php\n".
                   "// auto-generated by ".get_class($this)."\n".
                   "// date: %s\n\$this->actions=unserialize('%s');\n", date('Y/m/d H:i:s'),serialize($data)
        );
         return $retval;
    }

    function parse($configFiles)
    {
        $infos=array();
        foreach ($configFiles as $file)
        {
          $infos=mfTools::arrayDeepMerge($infos, include $file);
        }
        return $infos;
    }
    
   
   
    
    function buildActions($configFiles,$selectorName,$name)
    {                
        $data=$this->parse($configFiles);
        if (isset($data[$selectorName]))
        {
          //  var_dump($data,$selectorName,$name);
            return $data[$selectorName];
        }
      //  var_dump($data,$selectorName,$name);
      //  die(__METHOD__);
        return array();
    }
    
}

