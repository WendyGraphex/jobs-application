<?php

class mfMenuConfigHandlerCore extends mfFileLoaderConfigHandler {

    protected  $menu=null,              
               $menuSource=array();   
    
    function execute($configFiles) {   
              
        menuTranslator::removeCache();// Remove i18n cache
        $selectorName=$this->getParameters()->get('parameters');
        $data=$this->buildMenu($configFiles,$selectorName,$selectorName."_menu"); 
        $retval=sprintf("<?php\n".
                   "// auto-generated by ".get_class($this)."\n".
                   "// date: %s\n%s\n", date('Y/m/d H:i:s'), implode("\n", $data)
        );
         return $retval;
    }

    function getModuleFromConfigFile($file)
    {
        $file=explode("/",str_replace(mfConfig::get('mf_modules_dir')."/","",$file));
        return $file[0];
    }
    
    function parse($configFiles)
    {
        $infos=array();       
        foreach ($configFiles as $file)
        {          
          $items=include $file;           
          $module=$this->getModuleFromConfigFile($file);                 
          foreach (array('menu','items') as $key)
          {        
                if (isset($items[$key]))
                {    
                  foreach (array_keys($items[$key]) as $name)   
                  {                         
                      if (isset($items[$key][$name]['module']))  // If already defined pass
                           continue;
                      if (isset($items[$key][$name]['title']))   // define module only when title is defined
                        $items[$key][$name]['module']=$module;                                   
                  }    
                }
          }                    
          $infos=mfTools::arrayDeepMerge($infos, $items);                   
        }         
        return $infos;
    }
    
    function url($path)
    {
       $path=strpos($path,'/')===false?"":substr($path,1); 
       $ret=(strpos($path,"http")===false)?"/".$path:$path;
       return $ret;
    }
    
    protected function addChilds($childs,&$menu) 
    {       
        //TODO Sorted by key ???
        foreach ($childs as $childName=>$value)
        {
            if (isset($this->menuSource['items'][$childName]))
            {        
                $item=$this->menuSource['items'][$childName];
                if (isset($this->menuSource['items'][$childName]['childs']))
                   unset($item['childs']);
                $menu->addChild($childName)->add($item);
                if (isset($this->menuSource['items'][$childName]['childs']))
                    $this->addChilds($this->menuSource['items'][$childName]['childs'],$menu->getChild($childName)); 
            }
        }    
    }     

   // FOR DEBUG ONLY  
  /*  protected function displayMenu($menu)
    {
       echo "<ul>"; 
       foreach ($menu as $name=>$item)    
       {        
           echo "<li><span>Name:=".$name;
           if (isset($item['title']))
           {    
               echo " title:=".$item['title'];
           }       
           echo "</span></li>";
           if ($item->hasChildren())
               $this->displayMenu($item->getChildren()); 
       }
       echo "</ul>";
    }*/   
    
    function buildMenu($configFiles,$selectorName,$menuName)
    {
        $data=array();
        $this->menu=null;
        $this->menuSource=$this->parse($configFiles);               
        // Cleanup items
        foreach ($this->menuSource['items'] as $name => $item) {
            if (isset($item['url']))
                $this->menuSource['items'][$name]['url'] = $this->url($item['url']);        
            $this->menuSource['items'][$name]['name']=$name; // Add name for item     
            // Test validitÃ© des icons    
            if (isset($item['picture']))
            {
                if (!mfContext::getInstance()->getSite()->isFileExist($item['picture'],'all'))
                     unset($this->menuSource['items'][$name]['picture']);  
            }        
        }
        
        if (isset($this->menuSource['menu'][$selectorName])||$selectorName=='root')
        {        
            // Build menu skeleton
            if ($selectorName=='root')
            {    
                //@TODO redo this part not functional
                $this->addMenu($this->menuSource['menu']); 
            }    
            else
            {    
               $this->menu=new MenuItem();
               $this->addChilds($this->menuSource['menu'][$selectorName]['childs'],$this->menu); 
               unset($this->menuSource['menu'][$selectorName]['childs']); // Remove childrens to set properties of selector item
               $this->menu->add($this->menuSource['menu'][$selectorName]);
            }                  
            $data[]=sprintf("\$this->menu=unserialize('%s');",serialize($this->menu));               
            $data[]=sprintf("if (mfConfig::get('mf_i18n')) {\n\t\$menuTranslator=new menuTranslator(array('culture'=>\$request->getCulture(),'name'=>'%s'),\$site);",$menuName);         
            $data[]=sprintf("\t\$menuTranslator->translate(\$this->menu);");
            $data[]=sprintf("\t\$menuTranslator->setI18nSource();\n }");          
        }
        return $data;
    }
    
}

